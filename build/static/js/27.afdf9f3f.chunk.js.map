{"version":3,"sources":["components/mypage/profile/MypageProfile.style.ts","components/mypage/profile/MypageProfileModal.container.tsx","components/mypage/profile/MypageProfile.presenter.tsx","components/mypage/profile/MypageProfile.query.ts","components/mypage/profile/MypageProfile.container.tsx","components/login/Login.query.ts","components/common/hocs/withAuth.tsx","components/common/layout/mypage/MypageLayout.style.ts","components/common/layout/mypage/MypageLayout.presenter.tsx","components/common/layout/mypage/MypageLayout.container.tsx","assets/images/info.svg","assets/images/x.svg"],"names":["MypageProfileWrapper","styled","div","MypageBody","MypageProfileContentsWrapper","MypageProfileTitle","MypageProfileContents","MypageLine","MypageProfileIDWrapper","MypageProfileIDTitle","MypageProfileID","MypageProfilePWInput","input","props","pwError","MyapgeBtnWrapper","MypageBtnCancel","button","MypageBtnNext","ErrorImg","img","ErrorMsg","MypageProfileChangeWrapper","MypageProfileChangeTitle","MypageProfileChangeInput","passwordError","MypageProfileChangeContents","MypageProfileRadio","MypageRadioTitle","label","MypageChangeEmailBtn","GET_USER","gql","EMAIL_AUTH","EMAIL_AUTH_CHECK","DELETE_EMAIL_AUTH","UPDATE_USER","ChangeEmaillWrapper","ChangeEmailTitleWrapper","ChangeEmailTitle","ChangeEmailXSVG","ChangeContentsWrapper","ChangeInputWrapper","ChangeInput","ChangeInputTitle","ChangeBtnWrapper","ChangeCancel","ChangeBtn","ChangeAuthBtn","MypageProfileModalContainer","setIsModal","userRefetch","useState","isSend","isOk","isError","isAuth","setIsAuth","email","setEmail","auth","setAuth","useMutation","emailAuth","deleteEmailAuth","useQuery","data","refetch","updateUser","userData","variables","id","String","sessionStorage","getItem","handleEmailAuth","a","code","type","alert","handleEmailAuthCheck","Auth","emailAuths","filter","length","where","handleUpdateUser","user","src","XSVG","onClick","style","width","onChange","e","target","value","disabled","schma","yup","password","required","min","matches","confirmPassword","oneOf","phone","emailReception","smsReception","MypageProfilePresenter","handleLogin","handlePasswordInput","step","isModal","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","navigate","useNavigate","menu","marginTop","marginBottom","username","name","InfoSVG","onSubmit","message","placeholder","defaultValue","checked","htmlFor","LOGIN","WithAuth","setStep","setInput","setPwError","login","identifier","CREATE_TOKEN","FETCH_TOKEN","UPDATE_TOKEN","DELETE_TOKEN","FETCH_USER","UPDATE_IS_SUBSCRIPTION_USER","Component","fetchToken","userId","token","handleTokenCheck","useEffect","MypageMenuWrapper","MypageTitle","MypageBtn","MypageLayoutPresenter","borderBottom","MypageLayoutContainer"],"mappings":"wUAOaA,GAAuBC,KAAOC,IAAV,uLAUpBC,GAAaF,KAAOC,IAAV,oGAOVE,GAA+BH,KAAOC,IAAV,mEAK5BG,GAAqBJ,KAAOC,IAAV,6FAMlBI,GAAwBL,KAAOC,IAAV,8FAMrBK,GAAaN,KAAOC,IAAV,gFAKVM,GAAyBP,KAAOC,IAAV,8FAMtBO,GAAuBR,KAAOC,IAAV,qFAMpBQ,GAAkBT,KAAOC,IAAV,2FAMfS,GAAuBV,KAAOW,MAAV,wKAGrB,SAACC,GAAD,OACRA,EAAMC,QAAU,oBAAsB,uBAIpB,SAACD,GAAD,OAClBA,EAAMC,QAAU,UAAY,WAGnBC,GAAmBd,KAAOC,IAAV,mHAOhBc,GAAkBf,KAAOgB,OAAV,6NAYfC,GAAgBjB,KAAOgB,OAAV,yLAWbE,GAAWlB,KAAOmB,IAAV,mDAIRC,GAAWpB,KAAOC,IAAV,0FAQRoB,GAA6BrB,KAAOC,IAAV,+FAM1BqB,GAA2BtB,KAAOC,IAAV,iEAKxBsB,GAA2BvB,KAAOW,MAAV,6RAWzB,SAACC,GAAD,OACRA,EAAMY,cAAgB,oBAAsB,uBAC1B,SAACZ,GAAD,OAClBA,EAAMY,cAAgB,UAAY,WAGzBC,GAA8BzB,KAAOC,IAAV,uEAK3ByB,GAAqB1B,KAAOW,MAAV,qaAuBlBgB,GAAmB3B,KAAO4B,MAAV,iDAIhBC,GAAuB7B,KAAOgB,OAAV,+M,qECnKpBc,GAAWC,aAAH,oNAefC,GAAaD,aAAH,iMAWVE,GAAmBF,aAAH,uGAShBG,GAAoBH,aAAH,iMAWVI,GAAcJ,aAAH,6NAclBK,GAAsBpC,KAAOC,IAAV,uNAWnBoC,GAA0BrC,KAAOC,IAAV,6PAWvBqC,GAAmBtC,KAAOC,IAAV,mEAGhBsC,GAAkBvC,KAAOmB,IAAV,iDAIfqB,GAAwBxC,KAAOC,IAAV,2GAMrBwC,GAAqBzC,KAAOC,IAAV,+FAMlByC,GAAc1C,KAAOW,MAAV,sIAQXgC,GAAmB3C,KAAOC,IAAV,wFAMhB2C,GAAmB5C,KAAOC,IAAV,yFAMhB4C,GAAe7C,KAAOgB,OAAV,mPAaZ8B,GAAY9C,KAAOgB,OAAV,+MAYT+B,GAAgB/C,KAAOgB,OAAV,oKAsMJgC,GAtLyD,SAAC,GAGlE,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,YAGA,EAA4BC,mBAAS,CACnCC,QAAQ,EACRC,MAAM,EACNC,SAAS,IAHX,mBAAOC,EAAP,KAAeC,EAAf,KAMA,EAA0BL,mBAAS,IAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAAwBP,mBAAS,IAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAEA,EAAoBC,YAClB7B,IADK8B,EAAP,oBAKA,EAA0BD,YACxB3B,IADK6B,EAAP,oBAKA,EAA0BC,YAAS/B,IAA3BgC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAGd,EAAqBL,YACnB1B,IADKgC,EAAP,oBAKcC,EAAaJ,YAA+BlC,GAAU,CAClEuC,UAAW,CACTC,GAAIC,OAAOC,eAAeC,QAAQ,cAF9BR,KAOFS,EAAe,uCAAG,sBAAAC,EAAA,+EAEdb,EAAU,CACdO,UAAW,CACT1D,MAAO,CACLsD,KAAM,CACJR,MAAOA,EACPmB,KAAM,GACNC,KAAM,cARM,OAapBC,MAAM,2FACNtB,EAAU,2BACLD,GADI,IAEPH,QAAQ,KAEVc,IAlBoB,gDAoBpBY,MAAM,yEApBc,yDAAH,qDAyBfC,EAAoB,uCAAG,4BAAAJ,EAAA,yDAIP,KAHhBK,EADuB,OACHf,QADG,IACHA,OADG,EACHA,EAAMgB,WAAWC,QACvC,SAACjB,GAAD,OAAeA,EAAKW,OAASjB,MAEtBwB,OAJkB,iCAMvB3B,EAAU,2BACLD,GADI,IAEPF,MAAM,EACNC,SAAS,KATY,SAWjBS,EAAgB,CACpBM,UAAW,CACT1D,MAAO,CACLyE,MAAO,CACLd,GAAIU,EAAK,GAAGV,QAfG,OAoBvBQ,MAAM,4DApBiB,gDAsBvBtB,EAAU,2BACLD,GADI,IAEPD,SAAS,KAxBY,gCA4BzBE,EAAU,2BACLD,GADI,IAEPD,SAAS,KA9Bc,yDAAH,qDAoCpB+B,EAAgB,uCAAG,4BAAAV,EAAA,+EAEfR,EAAW,CACfE,UAAW,CACT1D,MAAO,CACLsD,KAAM,CACJR,MAAOA,GAET2B,MAAO,CACLd,GAAIC,OAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAUkB,YAAX,aAAC,EAAgBhB,SATd,OAcrBQ,MAAM,kEACN5B,IAfqB,uGAAH,qDAkBtB,OACE,gBAACd,GAAD,WACE,gBAACC,GAAD,WACE,eAACC,GAAD,8CACA,eAACC,GAAD,CACEgD,IAAKC,KACLC,QAAS,WACPxC,GAAW,GACXS,EAAS,UAIf,gBAAClB,GAAD,WACE,gBAACC,GAAD,WACE,eAACE,GAAD,iCACA,eAACD,GAAD,CACEgD,MAAO,CAAEC,MAAO,SAChBC,SAAU,SAACC,GACTnC,EAASmC,EAAEC,OAAOC,UAGpBxC,EAAOH,OAGP,eAACL,GAAD,CACE0C,QAASV,EACTiB,SAAUzC,EAAOF,KAFnB,SAIGE,EAAOF,KAAO,2BAAS,6BAN1B,eAACN,GAAD,CAAe0C,QAASf,EAAxB,yCAUJ,gBAACjC,GAAD,WACE,eAACE,GAAD,uCACA,eAACD,GAAD,CACEkD,SAAU,SAACC,GACTjC,EAAQiC,EAAEC,OAAOC,aAIvB,gBAACnD,GAAD,WACE,eAACC,GAAD,CACE4C,QAAS,WACPxC,GAAW,GACXS,EAAS,KAHb,0BAQA,eAACZ,GAAD,CACEkD,UAAWzC,EAAOF,KAClBoC,QAAS,WACPxC,GAAW,GACXoC,KAJJ,oCCpSJY,GAAQC,KAAW,CACvBC,SAAUD,OAEPE,SAAS,6JACTC,IAAI,EAAG,6JACPC,QACC,iDACA,6JAEJC,gBAAiBL,OAEdE,SAAS,yEACTI,MAAM,CAACN,KAAQ,aAAc,yEAChCO,MAAOP,OAAaE,SAAS,gDAC7BM,eAAgBR,OAAaE,WAC7BO,aAAcT,OAAaE,aAkRdQ,GA/Q8C,SAAC,GAUvD,IAAD,YATJxC,EASI,EATJA,SACAyC,EAQI,EARJA,YACAC,EAOI,EAPJA,oBACAjG,EAMI,EANJA,QACAkG,EAKI,EALJA,KACA1B,EAII,EAJJA,iBACA2B,EAGI,EAHJA,QACA/D,EAEI,EAFJA,WACAC,EACI,EADJA,YAEA,EAII+D,aAAQ,CAAEC,SAAUC,aAAYlB,MAHlCmB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAEThC,EAA0B,OAAGlB,QAAH,IAAGA,OAAH,EAAGA,EAAUkB,KACvCkC,EAAWC,eAEjB,OACE,gBAAC1H,GAAD,WACE,gBAACG,GAAD,WACE,eAAC,KAAD,CAAuBwH,KAAK,YAC5B,gBAACvH,GAAD,WACE,eAACC,GAAD,oDACU,IAAT2G,GACC,eAAC1G,GAAD,uIAKF,eAACC,GAAD,CAAYoF,MAAO,CAAEiC,UAAW,SAAUC,aAAc,YAC9C,IAATb,GACC,uCACE,gBAACxG,GAAD,WACE,eAACC,GAAD,iCACA,eAACC,GAAD,iBAAkB6E,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMuC,cAE1B,gBAACtH,GAAD,WACE,eAACC,GAAD,uCACA,eAACE,GAAD,CACEoH,KAAK,WACLjD,KAAK,WACLe,SAAUkB,EACVjG,QAASA,IAEVA,GACC,uCACE,eAACK,GAAD,CAAUqE,IAAKwC,OACf,eAAC3G,GAAD,yGAMA,IAAT2F,GACC,qCACE,wBAAMiB,SAAUX,EAAahC,GAA7B,UACE,gBAAChE,GAAD,CAA4BqE,MAAO,CAAEkC,aAAc,QAAnD,UACE,eAACtG,GAAD,iCACA,eAACG,GAAD,iBACG6D,QADH,IACGA,OADH,EACGA,EAAMuC,cAGX,gBAACxG,GAAD,WACE,eAACC,GAAD,uCACA,eAACC,GAAD,yBACEsD,KAAK,YACDuC,EAAS,aAFf,IAGE5F,cAAa,OAAE8F,QAAF,IAAEA,GAAF,UAAEA,EAAQnB,gBAAV,aAAE,EAAkB8B,YAE5B,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQnB,gBAAR,eAAkB8B,UACjB,uCACE,eAAC/G,GAAD,CAAUqE,IAAKwC,OACf,eAAC3G,GAAD,iBAAWkG,QAAX,IAAWA,GAAX,UAAWA,EAAQnB,gBAAnB,aAAW,EAAkB8B,gBAInC,gBAAC5G,GAAD,WACE,eAACC,GAAD,oDAGA,eAACC,GAAD,yBACEsD,KAAK,YACDuC,EAAS,oBAFf,IAGE5F,cAAa,OAAE8F,QAAF,IAAEA,GAAF,UAAEA,EAAQf,uBAAV,aAAE,EAAyB0B,YAEnC,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQf,uBAAR,eAAyB0B,UACxB,uCACE,eAAC/G,GAAD,CAAUqE,IAAKwC,OACf,eAAC3G,GAAD,iBAAWkG,QAAX,IAAWA,GAAX,UAAWA,EAAQf,uBAAnB,aAAW,EAAyB0B,gBAI1C,eAAC3H,GAAD,CACEoF,MAAO,CAAEiC,UAAW,SAAUC,aAAc,YAE9C,gBAACvG,GAAD,WACE,eAACC,GAAD,iCACA,eAACG,GAAD,2BAAiC2F,EAAS,UAA1C,oBACG9B,QADH,IACGA,OADH,EACGA,EAAM7B,SAET,eAAC5B,GAAD,CACE4D,QAAS,WACPxC,GAAW,IAFf,gDAQF,eAAC3C,GAAD,CACEoF,MAAO,CAAEiC,UAAW,SAAUC,aAAc,YAE9C,gBAACvG,GAAD,WACE,eAACC,GAAD,2BACA,eAACG,GAAD,iBACG6D,QADH,IACGA,OADH,EACGA,EAAMwC,UAGX,gBAACzG,GAAD,CAA4BqE,MAAO,CAAEiC,UAAW,QAAhD,UACE,eAACrG,GAAD,mDAGA,eAACC,GAAD,yBACEsD,KAAK,SACLqD,YAAY,2EACRd,EAAS,UAHf,IAIEe,aAAkB,OAAJ7C,QAAI,IAAJA,KAAMmB,MAAN,OAAcnB,QAAd,IAAcA,OAAd,EAAcA,EAAMmB,MAAQ,SAG9C,eAACnG,GAAD,CACEoF,MAAO,CAAEiC,UAAW,SAAUC,aAAc,YAE9C,gBAACvG,GAAD,WACE,eAACC,GAAD,+CAG0B,KAArB,OAAJgE,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,iBACL,uCACE,eAAChF,GAAD,yBACEmD,KAAK,QACLP,GAAG,YACHyB,MAAM,QACFqB,EAAS,mBAJf,IAKEgB,SAAO,KAET,eAACzG,GAAD,CAAkB0G,QAAQ,YAA1B,uCAGA,eAAC3G,GAAD,aACEmD,KAAK,QACLP,GAAG,aACHyB,MAAM,SACFqB,EAAS,oBAEf,eAACzF,GAAD,CAAkB0G,QAAQ,aAA1B,2CAKsB,KAArB,OAAJ/C,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,iBACL,uCACE,eAAChF,GAAD,aACEmD,KAAK,QACLP,GAAG,YACHyB,MAAM,QACFqB,EAAS,oBAEf,eAACzF,GAAD,CAAkB0G,QAAQ,YAA1B,uCAGA,eAAC3G,GAAD,yBACEmD,KAAK,QACLP,GAAG,aACHyB,MAAM,SACFqB,EAAS,mBAJf,IAKEgB,SAAO,KAET,eAACzG,GAAD,CAAkB0G,QAAQ,aAA1B,6CAMN,gBAAChH,GAAD,CAA4BqE,MAAO,CAAEiC,UAAW,QAAhD,UACE,eAACrG,GAAD,gCACK,OAAJgE,QAAI,IAAJA,OAAA,EAAAA,EAAMqB,eACL,uCACE,eAACjF,GAAD,yBACEmD,KAAK,QACLP,GAAG,UACHyB,MAAM,QACFqB,EAAS,iBAJf,IAKEgB,SAAO,KAET,eAACzG,GAAD,CAAkB0G,QAAQ,UAA1B,uCAGA,eAAC3G,GAAD,aACEmD,KAAK,QACLP,GAAG,WACHyB,MAAM,SACFqB,EAAS,kBAEf,eAACzF,GAAD,CAAkB0G,QAAQ,WAA1B,2CAKoB,KAAnB,OAAJ/C,QAAI,IAAJA,OAAA,EAAAA,EAAMqB,eACL,uCACE,eAACjF,GAAD,aACEmD,KAAK,QACLP,GAAG,UACHyB,MAAM,QACFqB,EAAS,kBAEf,eAACzF,GAAD,CAAkB0G,QAAQ,UAA1B,uCAGA,eAAC3G,GAAD,yBACEmD,KAAK,QACLP,GAAG,WACHyB,MAAM,SACFqB,EAAS,iBAJf,IAKEgB,SAAO,KAET,eAACzG,GAAD,CAAkB0G,QAAQ,WAA1B,6CAMN,eAAC/H,GAAD,CAAYoF,MAAO,CAAEiC,UAAW,YAChC,gBAAC7G,GAAD,WACE,eAACC,GAAD,CACE0E,QAAS,WACP+B,EAAS,iBAFb,0BAOA,eAACvG,GAAD,CAAe4D,KAAK,SAApB,kCAKE,IAATkC,GACC,gBAACjG,GAAD,WACE,eAACC,GAAD,CACE0E,QAAS,WACP+B,EAAS,iBAFb,0BAOA,eAACvG,GAAD,CAAewE,QAASoB,EAAxB,mCAKPG,GACC,eAAC,GAAD,CACE/D,WAAYA,EACZC,YAAaA,QC5UVpB,GAAWC,aAAH,oNAeRuG,GAAQvG,aAAH,+TAoBLI,GAAcJ,aAAH,6N,UCsFTwG,wBA9GgB,WAC7B,IAAMf,EAAWC,eAGjB,EAAwBtE,mBAAS,GAAjC,mBAAO4D,EAAP,KAAayB,EAAb,KAGA,EAA0BrF,mBAAS,CACjCgD,SAAU,KADZ,mBAAOxF,EAAP,KAAc8H,EAAd,KAKA,EAA8BtF,oBAAS,GAAvC,mBAAO6D,EAAP,KAAgB/D,EAAhB,KAGA,EAA8BE,oBAAS,GAAvC,mBAAOtC,EAAP,KAAgB6H,EAAhB,KAGA,EAAiD1E,YAG/ClC,GAAU,CACVuC,UAAW,CACTC,GAAIC,OAAOC,eAAeC,QAAQ,cALxBL,EAAd,EAAQH,KAAyBf,EAAjC,EAAwBgB,QAUxB,EAAgBL,YAAyCyE,IAAlDK,EAAP,oBAGA,EAAqB9E,YACnB1B,IADKgC,EAAP,oBAUM0C,EAAW,uCAAG,4BAAAlC,EAAA,+EAEVgE,EAAM,CACVtE,UAAW,CACT1D,MAAO,CACLiI,WAAYrE,OAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAUkB,YAAX,aAAC,EAAgBuC,UACnC1B,SAAUxF,EAAMwF,aANN,OAUhBuC,GAAW,GACXF,GAAQ,kBAAMzB,EAAO,KAXL,gDAahBjC,MAAM,4DACN4D,GAAW,GAdK,yDAAH,qDA2BXrD,EAAgB,uCAAG,WAAOpB,GAAP,mBAAAU,EAAA,sEAEf+B,EAAyC,SAAxBzC,EAAKyC,eACtBC,EAAqC,SAAtB1C,EAAK0C,aAHL,SAIfxC,EAAW,CACfE,UAAW,CACT1D,MAAO,CACLsD,KAAM,CACJR,MAAOQ,EAAKR,MACZ0C,SAAUlC,EAAKkC,SACfM,MAAOxC,EAAKwC,MACZE,eACAD,kBAEFtB,MAAO,CACLd,GAAIC,OAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAUkB,YAAX,aAAC,EAAgBhB,SAfd,OAoBrBQ,MAAM,wEACN0C,EAAS,gBArBY,gDAuBrB1C,MAAM,4DAvBe,yDAAH,sDA2BtB,OACE,eAAC,GAAD,CACEV,SAAUA,EACVyC,YAAaA,EACbC,oBAvCwB,SAACjB,GAC3B4C,EAAS,2BACJ9H,GADG,kBAELkF,EAAEC,OAAOgC,KAAOjC,EAAEC,OAAOC,UAqC1BlF,QAASA,EACTkG,KAAMA,EACN1B,iBAAkBA,EAClB2B,QAASA,EACT/D,WAAYA,EACZC,YAAaA,Q,oTCpHNoF,EAAQvG,YAAH,8TAoBL8G,EAAe9G,YAAH,mKAUZ+G,EAAc/G,YAAH,yLAUXgH,EAAehH,YAAH,kKAUZiH,EAAejH,YAAH,kKAUZkH,EAAalH,YAAH,uMAcVmH,EAA8BnH,YAAH,+J,yJCvEzB,SAASwG,EAASY,GAC/B,OAAO,SAA0BvI,GAC/B,MAAqBiD,YAAYiF,KAA1BM,EAAP,oBACM5B,EAAWC,cACX4B,EAAS7E,eAAeC,QAAQ,UAChC6E,EAAQ9E,eAAeC,QAAQ,eAI/B8E,EAAgB,uCAAG,sBAAA5E,EAAA,+EAEfyE,EAAW,CACf/E,UAAW,CACTgF,SACAC,WALiB,8DASrBxE,MAAM,4DACN0C,EAAS,UAVY,mBAWd,GAXc,yDAAH,qDAoBtB,OALAgC,qBAAU,WACRD,MAGC,IACI,cAACJ,EAAD,eAAevI,O,sEC5Bb6I,EAAoBzJ,IAAOC,IAAV,kHAOjByJ,EAAc1J,IAAOC,IAAV,iRAaX0J,EAAY3J,IAAOgB,OAAV,6OAGX,SAACJ,GAAD,OAAgCA,EAAM8G,KAAO,QAAU,aAOjD,SAAC9G,GAAD,OACbA,EAAM8G,KAAO,uBAAyB,6B,GAGL1H,IAAOC,IAAV,6C,MC2BnB2J,EAxD6C,SAAC,GAAc,IAAZlC,EAAW,EAAXA,KACvDF,EAAWC,cAEjB,OACE,eAACgC,EAAD,WACE,cAACC,EAAD,CACEjE,QAAS,WACP+B,EAAS,iBAFb,qBAOA,cAACmC,EAAD,CACEjC,KAAe,YAATA,EACNjC,QAAS,WACP+B,EAAS,oBAHb,sCAQA,cAACmC,EAAD,CACEjC,KAAe,aAATA,EACNjC,QAAS,WACP+B,EAAS,qBAHb,mDAQA,cAACmC,EAAD,CACEjC,KAAe,WAATA,EACNjC,QAAS,WACP+B,EAAS,mBAHb,oDAQA,cAACmC,EAAD,CACEjC,KAAe,YAATA,EACNjC,QAAS,WACP+B,EAAS,oBAHb,mDAQA,cAACmC,EAAD,CACEjC,KAAe,aAATA,EACNhC,MAAO,CAAEmE,aAAc,QACvBpE,QAAS,WACP+B,EAAS,qBAJb,0CC9CSsC,IAH6C,SAAC,GAAc,IAAZpC,EAAW,EAAXA,KAC7D,OAAO,cAAC,EAAD,CAAuBA,KAAMA,M,iCCPvB,QAA0B,kC,iCCA1B,QAA0B","file":"static/js/27.afdf9f3f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\ninterface IMypageProfileProps {\n  pwError?: boolean;\n  passwordError?: string;\n}\n\nexport const MypageProfileWrapper = styled.div`\n  max-width: 1920px;\n  min-width: 1100px;\n  width: 100%;\n  padding-top: 58px;\n  display: flex;\n  justify-content: center;\n  padding-bottom: 110px;\n`;\n\nexport const MypageBody = styled.div`\n  display: flex;\n  width: 1100px;\n  justify-content: space-between;\n`;\n\n//* 비밀번호 입력\nexport const MypageProfileContentsWrapper = styled.div`\n  width: 821px;\n  padding-top: 9px;\n`;\n\nexport const MypageProfileTitle = styled.div`\n  font-family: SpoqaHanSansNeo-Bold;\n\n  padding-bottom: 6px;\n`;\n\nexport const MypageProfileContents = styled.div`\n  font-size: 12px;\n  color: #999999;\n  padding-bottom: 2.5px;\n`;\n\nexport const MypageLine = styled.div`\n  width: 821px;\n  border-top: 1px solid #c1c1c1;\n`;\n\nexport const MypageProfileIDWrapper = styled.div`\n  display: flex;\n  margin-top: 33.5px;\n  align-items: center;\n`;\n\nexport const MypageProfileIDTitle = styled.div`\n  font-family: SpoqaHanSansNeo-Bold;\n\n  width: 60px;\n`;\n\nexport const MypageProfileID = styled.div`\n  font-family: SpoqaHanSansNeo-Bold;\n\n  margin-left: 36px;\n`;\n\nexport const MypageProfilePWInput = styled.input`\n  width: 263px;\n  height: 46px;\n  border: ${(props: IMypageProfileProps) =>\n    props.pwError ? \"1px solid #ff0000\" : \"1px solid #cccccc\"};\n  outline: none;\n  margin-left: 36px;\n  padding-left: 13px;\n  background-color: ${(props: IMypageProfileProps) =>\n    props.pwError ? \"#ffdcdc\" : \"white\"};\n`;\n\nexport const MyapgeBtnWrapper = styled.div`\n  width: 821px;\n  display: flex;\n  justify-content: center;\n  margin-top: 45.5px;\n`;\n\nexport const MypageBtnCancel = styled.button`\n  width: 263px;\n  height: 46px;\n  background-color: white;\n  color: #999999;\n  font-size: 14px;\n  outline: none;\n  cursor: pointer;\n  border: 1px solid #cccccc;\n  margin-right: 16px;\n`;\n\nexport const MypageBtnNext = styled.button`\n  width: 263px;\n  height: 46px;\n  background-color: #4033a2;\n  color: white;\n  font-size: 14px;\n  outline: none;\n  cursor: pointer;\n  border: none;\n`;\n\nexport const ErrorImg = styled.img`\n  margin-left: 10px;\n`;\n\nexport const ErrorMsg = styled.div`\n  color: #ff0000;\n  font-size: 11px;\n  margin-left: 10px;\n`;\n\n//* 정보 수정\n\nexport const MypageProfileChangeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nexport const MypageProfileChangeTitle = styled.div`\n  font-size: 14px;\n  width: 81px;\n`;\n\nexport const MypageProfileChangeInput = styled.input`\n  width: 319px;\n  height: 36px;\n  outline: none;\n  padding-left: 13px;\n  margin-left: 50px;\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  border: ${(props: IMypageProfileProps) =>\n    props.passwordError ? \"1px solid #ff0000\" : \"1px solid #cccccc\"};\n  background-color: ${(props: IMypageProfileProps) =>\n    props.passwordError ? \"#ffdcdc\" : \"white\"};\n`;\n\nexport const MypageProfileChangeContents = styled.div`\n  font-size: 14px;\n  margin-left: 50px;\n`;\n\nexport const MypageProfileRadio = styled.input`\n  margin-right: 4px;\n  -webkit-appearance: none;\n  width: 16px;\n  height: 16px;\n  border: 1px solid darkgray;\n  border-radius: 50%;\n  outline: none;\n  background: white;\n  margin-left: 50px;\n  :before {\n    content: \"\";\n    display: block;\n    width: 60%;\n    height: 60%;\n    margin: 20% auto;\n    border-radius: 50%;\n  }\n  :checked:before {\n    background: #999999;\n  }\n`;\n\nexport const MypageRadioTitle = styled.label`\n  font-size: 12px;\n`;\n\nexport const MypageChangeEmailBtn = styled.button`\n  width: 116px;\n  height: 36px;\n  background-color: #4033a2;\n  color: white;\n  font-size: 14px;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  margin-left: 15px;\n`;\n","import styled from \"@emotion/styled\";\nimport XSVG from \"../../../assets/images/x.svg\";\nimport { ApolloQueryResult, gql, useMutation, useQuery } from \"@apollo/client\";\nimport {\n  EmailAuth,\n  Mutation,\n  MutationCreateEmailAuthArgs,\n  MutationDeleteEmailAuthArgs,\n  MutationUpdateUserArgs,\n  Query,\n  QueryUserArgs,\n} from \"../../../commons/types/generated/types\";\nimport { useState } from \"react\";\n\n//* gql\nexport const GET_USER = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      id\n      created_at\n      username\n      email\n      name\n      phone\n      smsReception\n      emailReception\n    }\n  }\n`;\n\nconst EMAIL_AUTH = gql`\n  mutation createEmailAuth($input: createEmailAuthInput) {\n    createEmailAuth(input: $input) {\n      emailAuth {\n        id\n        code\n      }\n    }\n  }\n`;\n\nconst EMAIL_AUTH_CHECK = gql`\n  query emailAuths {\n    emailAuths {\n      id\n      code\n    }\n  }\n`;\n\nconst DELETE_EMAIL_AUTH = gql`\n  mutation deleteEmailAuth($input: deleteEmailAuthInput) {\n    deleteEmailAuth(input: $input) {\n      emailAuth {\n        id\n        code\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($input: updateUserInput!) {\n    updateUser(input: $input) {\n      user {\n        id\n        phone\n        smsReception\n        emailReception\n      }\n    }\n  }\n`;\n\n//* style\nconst ChangeEmaillWrapper = styled.div`\n  position: absolute;\n  box-shadow: 1px 3px 3px gray;\n  width: 478px;\n  height: 226px;\n  border: 1px solid #cccccc;\n  top: 50%;\n  background-color: white;\n  border-radius: 13px;\n`;\n\nconst ChangeEmailTitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 50px;\n  align-items: center;\n  padding-left: 34px;\n  padding-right: 34px;\n  background-color: #f9f9f9;\n  border-radius: 13px 13px 0px 0px;\n`;\nconst ChangeEmailTitle = styled.div`\n  font-family: SpoqaHanSansNeo-Bold;\n`;\nconst ChangeEmailXSVG = styled.img`\n  cursor: pointer;\n`;\n\nconst ChangeContentsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 27px 33px 19px 33px;\n`;\n\nconst ChangeInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n`;\n\nconst ChangeInput = styled.input`\n  width: 332px;\n  height: 36px;\n  outline: none;\n  border: 1px solid #cccccc;\n  padding-left: 13px;\n`;\n\nconst ChangeInputTitle = styled.div`\n  font-size: 14px;\n  width: 53px;\n  margin-right: 27px;\n`;\n\nconst ChangeBtnWrapper = styled.div`\n  display: flex;\n  width: 410px;\n  justify-content: end;\n`;\n\nconst ChangeCancel = styled.button`\n  border-radius: 5px;\n  border: 1px solid #cccccc;\n  width: 68px;\n  height: 31px;\n  color: #999999;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: white;\n  outline: none;\n  margin-right: 12px;\n`;\n\nconst ChangeBtn = styled.button`\n  border-radius: 5px;\n  border: none;\n  width: 68px;\n  height: 31px;\n  color: white;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #4033a2;\n  outline: none;\n`;\n\nconst ChangeAuthBtn = styled.button`\n  width: 93px;\n  height: 36px;\n  background-color: #333333;\n  color: white;\n  cursor: pointer;\n  outline: none;\n  border: none;\n`;\n\ninterface IMypageProfileModalProps {\n  setIsModal: React.Dispatch<React.SetStateAction<boolean>>;\n  userRefetch(\n    variables?: Partial<QueryUserArgs> | undefined\n  ): Promise<ApolloQueryResult<Query>>;\n}\nconst MypageProfileModalContainer: React.FC<IMypageProfileModalProps> = ({\n  setIsModal,\n  userRefetch,\n}) => {\n  //* 인증 상태\n  const [isAuth, setIsAuth] = useState({\n    isSend: false,\n    isOk: false,\n    isError: false,\n  });\n\n  const [email, setEmail] = useState(\"\");\n  const [auth, setAuth] = useState(\"\");\n  //* 이메일 인증 Mutation\n  const [emailAuth] = useMutation<Mutation, MutationCreateEmailAuthArgs>(\n    EMAIL_AUTH\n  );\n\n  //* 이메일 인증 후 데이터 삭제\n  const [deleteEmailAuth] = useMutation<Mutation, MutationDeleteEmailAuthArgs>(\n    DELETE_EMAIL_AUTH\n  );\n\n  //* 이메일 인증 코드 데이터\n  const { data, refetch } = useQuery(EMAIL_AUTH_CHECK);\n\n  //* 회원정보 변경 뮤테이션\n  const [updateUser] = useMutation<Mutation, MutationUpdateUserArgs>(\n    UPDATE_USER\n  );\n\n  //* 유저 정보 불러오기\n  const { data: userData } = useQuery<Query, QueryUserArgs>(GET_USER, {\n    variables: {\n      id: String(sessionStorage.getItem(\"userId\")),\n    },\n  });\n\n  //* 인증번호 발송\n  const handleEmailAuth = async () => {\n    try {\n      await emailAuth({\n        variables: {\n          input: {\n            data: {\n              email: email,\n              code: \"\",\n              type: \"change\",\n            },\n          },\n        },\n      });\n      alert(\"인증코드가 메일로 전송됐습니다.\");\n      setIsAuth({\n        ...isAuth,\n        isSend: true,\n      });\n      refetch();\n    } catch (error) {\n      alert(\"이미 가입된 이메일입니다.\");\n    }\n  };\n\n  //* 인증번호 확인\n  const handleEmailAuthCheck = async () => {\n    let Auth: EmailAuth[] = data?.emailAuths.filter(\n      (data: any) => data.code === auth\n    );\n    if (Auth.length === 1) {\n      try {\n        setIsAuth({\n          ...isAuth,\n          isOk: true,\n          isError: false,\n        });\n        await deleteEmailAuth({\n          variables: {\n            input: {\n              where: {\n                id: Auth[0].id,\n              },\n            },\n          },\n        });\n        alert(\"인증이 완료됐습니다.\");\n      } catch (error) {\n        setIsAuth({\n          ...isAuth,\n          isError: true,\n        });\n      }\n    } else {\n      setIsAuth({\n        ...isAuth,\n        isError: true,\n      });\n    }\n  };\n\n  //*회원정보 변경 함수\n  const handleUpdateUser = async () => {\n    try {\n      await updateUser({\n        variables: {\n          input: {\n            data: {\n              email: email,\n            },\n            where: {\n              id: String(userData?.user?.id),\n            },\n          },\n        },\n      });\n      alert(\"이메일이 변경됐습니다.\");\n      userRefetch();\n    } catch (error) {}\n  };\n  return (\n    <ChangeEmaillWrapper>\n      <ChangeEmailTitleWrapper>\n        <ChangeEmailTitle>이메일 변경</ChangeEmailTitle>\n        <ChangeEmailXSVG\n          src={XSVG}\n          onClick={() => {\n            setIsModal(false);\n            setEmail(\"\");\n          }}\n        />\n      </ChangeEmailTitleWrapper>\n      <ChangeContentsWrapper>\n        <ChangeInputWrapper>\n          <ChangeInputTitle>이메일</ChangeInputTitle>\n          <ChangeInput\n            style={{ width: \"239px\" }}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          {!isAuth.isSend ? (\n            <ChangeAuthBtn onClick={handleEmailAuth}>인증번호</ChangeAuthBtn>\n          ) : (\n            <ChangeAuthBtn\n              onClick={handleEmailAuthCheck}\n              disabled={isAuth.isOk}\n            >\n              {isAuth.isOk ? \"인증완료\" : \"인증확인\"}\n            </ChangeAuthBtn>\n          )}\n        </ChangeInputWrapper>\n        <ChangeInputWrapper>\n          <ChangeInputTitle>인증번호</ChangeInputTitle>\n          <ChangeInput\n            onChange={(e) => {\n              setAuth(e.target.value);\n            }}\n          />\n        </ChangeInputWrapper>\n        <ChangeBtnWrapper>\n          <ChangeCancel\n            onClick={() => {\n              setIsModal(false);\n              setEmail(\"\");\n            }}\n          >\n            취소\n          </ChangeCancel>\n          <ChangeBtn\n            disabled={!isAuth.isOk}\n            onClick={() => {\n              setIsModal(false);\n              handleUpdateUser();\n            }}\n          >\n            변경\n          </ChangeBtn>\n        </ChangeBtnWrapper>\n      </ChangeContentsWrapper>\n    </ChangeEmaillWrapper>\n  );\n};\n\nexport default MypageProfileModalContainer;\n","import {\n  Query,\n  QueryUserArgs,\n  UsersPermissionsUser,\n} from \"../../../commons/types/generated/types\";\nimport MypageLayoutContainer from \"../../common/layout/mypage/MypageLayout.container\";\nimport {\n  MypageBody,\n  MypageProfileWrapper,\n  MypageProfileContentsWrapper,\n  MypageProfileTitle,\n  MypageProfileContents,\n  MypageLine,\n  MypageProfileIDWrapper,\n  MypageProfileIDTitle,\n  MypageProfileID,\n  MypageProfilePWInput,\n  MyapgeBtnWrapper,\n  MypageBtnCancel,\n  MypageBtnNext,\n  ErrorMsg,\n  ErrorImg,\n  MypageProfileChangeWrapper,\n  MypageProfileChangeTitle,\n  MypageProfileChangeContents,\n  MypageProfileChangeInput,\n  MypageProfileRadio,\n  MypageRadioTitle,\n  MypageChangeEmailBtn,\n} from \"./MypageProfile.style\";\nimport InfoSVG from \"../../../assets/images/info.svg\";\nimport { useNavigate } from \"react-router\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport MypageProfileModalContainer from \"./MypageProfileModal.container\";\nimport { ApolloQueryResult } from \"@apollo/client\";\n\ninterface IMypageProfleProps {\n  userData: any;\n  handleLogin: () => Promise<void>;\n  handlePasswordInput: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  pwError: boolean;\n  step: number;\n  handleUpdateUser: (data: any) => Promise<void>;\n  isModal: boolean;\n  setIsModal: React.Dispatch<React.SetStateAction<boolean>>;\n  userRefetch(\n    variables?: Partial<QueryUserArgs> | undefined\n  ): Promise<ApolloQueryResult<Query>>;\n}\n\nconst schma = yup.object({\n  password: yup\n    .string()\n    .required(\"비밀번호는 8자 이상, 소문자와 대문자기 포함되어야 합니다.\")\n    .min(8, \"비밀번호는 8자 이상, 소문자와 대문자가 포함되어야 합니다.\")\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      \"비밀번호는 8자 이상, 소문자와 대문자가 포함되어야 합니다.\"\n    ),\n  confirmPassword: yup\n    .string()\n    .required(\"비밀번호가 서로 다릅니다.\")\n    .oneOf([yup.ref(\"password\")], \"비밀번호가 서로 다릅니다.\"),\n  phone: yup.string().required(\"필수 입력입니다.\"),\n  emailReception: yup.string().required(),\n  smsReception: yup.string().required(),\n});\n\nconst MypageProfilePresenter: React.FC<IMypageProfleProps> = ({\n  userData,\n  handleLogin,\n  handlePasswordInput,\n  pwError,\n  step,\n  handleUpdateUser,\n  isModal,\n  setIsModal,\n  userRefetch,\n}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schma) });\n  const user: UsersPermissionsUser = userData?.user;\n  const navigate = useNavigate();\n\n  return (\n    <MypageProfileWrapper>\n      <MypageBody>\n        <MypageLayoutContainer menu=\"profile\" />\n        <MypageProfileContentsWrapper>\n          <MypageProfileTitle>회원정보 변경</MypageProfileTitle>\n          {step === 0 && (\n            <MypageProfileContents>\n              회원 개인정보를 확인하고 수정 할 수 있습니다\n            </MypageProfileContents>\n          )}\n\n          <MypageLine style={{ marginTop: \"17.5px\", marginBottom: \"41.5px\" }} />\n          {step === 0 && (\n            <>\n              <MypageProfileIDWrapper>\n                <MypageProfileIDTitle>아이디</MypageProfileIDTitle>\n                <MypageProfileID>{user?.username}</MypageProfileID>\n              </MypageProfileIDWrapper>\n              <MypageProfileIDWrapper>\n                <MypageProfileIDTitle>비밀번호</MypageProfileIDTitle>\n                <MypageProfilePWInput\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={handlePasswordInput}\n                  pwError={pwError}\n                />\n                {pwError && (\n                  <>\n                    <ErrorImg src={InfoSVG}></ErrorImg>\n                    <ErrorMsg>비밀번호가 일치하지 않습니다.</ErrorMsg>\n                  </>\n                )}\n              </MypageProfileIDWrapper>\n            </>\n          )}\n          {step === 1 && (\n            <>\n              <form onSubmit={handleSubmit(handleUpdateUser)}>\n                <MypageProfileChangeWrapper style={{ marginBottom: \"24px\" }}>\n                  <MypageProfileChangeTitle>아이디</MypageProfileChangeTitle>\n                  <MypageProfileChangeContents>\n                    {user?.username}\n                  </MypageProfileChangeContents>\n                </MypageProfileChangeWrapper>\n                <MypageProfileChangeWrapper>\n                  <MypageProfileChangeTitle>비밀번호</MypageProfileChangeTitle>\n                  <MypageProfileChangeInput\n                    type=\"password\"\n                    {...register(\"password\")}\n                    passwordError={errors?.password?.message}\n                  />\n                  {errors?.password?.message && (\n                    <>\n                      <ErrorImg src={InfoSVG} />\n                      <ErrorMsg>{errors?.password?.message}</ErrorMsg>\n                    </>\n                  )}\n                </MypageProfileChangeWrapper>\n                <MypageProfileChangeWrapper>\n                  <MypageProfileChangeTitle>\n                    비밀번호 확인\n                  </MypageProfileChangeTitle>\n                  <MypageProfileChangeInput\n                    type=\"password\"\n                    {...register(\"confirmPassword\")}\n                    passwordError={errors?.confirmPassword?.message}\n                  />\n                  {errors?.confirmPassword?.message && (\n                    <>\n                      <ErrorImg src={InfoSVG} />\n                      <ErrorMsg>{errors?.confirmPassword?.message}</ErrorMsg>\n                    </>\n                  )}\n                </MypageProfileChangeWrapper>\n                <MypageLine\n                  style={{ marginTop: \"33.5px\", marginBottom: \"33.5px\" }}\n                />\n                <MypageProfileChangeWrapper>\n                  <MypageProfileChangeTitle>이메일</MypageProfileChangeTitle>\n                  <MypageProfileChangeContents {...register(\"email\")}>\n                    {user?.email}\n                  </MypageProfileChangeContents>\n                  <MypageChangeEmailBtn\n                    onClick={() => {\n                      setIsModal(true);\n                    }}\n                  >\n                    이메일 변경\n                  </MypageChangeEmailBtn>\n                </MypageProfileChangeWrapper>\n                <MypageLine\n                  style={{ marginTop: \"33.5px\", marginBottom: \"33.5px\" }}\n                />\n                <MypageProfileChangeWrapper>\n                  <MypageProfileChangeTitle>이름</MypageProfileChangeTitle>\n                  <MypageProfileChangeContents>\n                    {user?.name}\n                  </MypageProfileChangeContents>\n                </MypageProfileChangeWrapper>\n                <MypageProfileChangeWrapper style={{ marginTop: \"23px\" }}>\n                  <MypageProfileChangeTitle>\n                    휴대전화번호\n                  </MypageProfileChangeTitle>\n                  <MypageProfileChangeInput\n                    type=\"number\"\n                    placeholder=\"(-)없이 숫자만 입력해주세요\"\n                    {...register(\"phone\")}\n                    defaultValue={user?.phone ? user?.phone : \"\"}\n                  />\n                </MypageProfileChangeWrapper>\n                <MypageLine\n                  style={{ marginTop: \"33.5px\", marginBottom: \"33.5px\" }}\n                />\n                <MypageProfileChangeWrapper>\n                  <MypageProfileChangeTitle>\n                    이메일 수신\n                  </MypageProfileChangeTitle>\n                  {user?.emailReception === true && (\n                    <>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"emailTrue\"\n                        value=\"true\"\n                        {...register(\"emailReception\")}\n                        checked\n                      />\n                      <MypageRadioTitle htmlFor=\"emailTrue\">\n                        수신 허용\n                      </MypageRadioTitle>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"emailFalse\"\n                        value=\"false\"\n                        {...register(\"emailReception\")}\n                      />\n                      <MypageRadioTitle htmlFor=\"emailFalse\">\n                        수신 거부\n                      </MypageRadioTitle>\n                    </>\n                  )}\n                  {user?.emailReception === false && (\n                    <>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"emailTrue\"\n                        value=\"true\"\n                        {...register(\"emailReception\")}\n                      />\n                      <MypageRadioTitle htmlFor=\"emailTrue\">\n                        수신 허용\n                      </MypageRadioTitle>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"emailFalse\"\n                        value=\"false\"\n                        {...register(\"emailReception\")}\n                        checked\n                      />\n                      <MypageRadioTitle htmlFor=\"emailFalse\">\n                        수신 거부\n                      </MypageRadioTitle>\n                    </>\n                  )}\n                </MypageProfileChangeWrapper>\n                <MypageProfileChangeWrapper style={{ marginTop: \"34px\" }}>\n                  <MypageProfileChangeTitle>SMS 수신</MypageProfileChangeTitle>\n                  {user?.smsReception && (\n                    <>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"SMSTrue\"\n                        value=\"true\"\n                        {...register(\"smsReception\")}\n                        checked\n                      />\n                      <MypageRadioTitle htmlFor=\"SMSTrue\">\n                        수신 허용\n                      </MypageRadioTitle>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"SMSFalse\"\n                        value=\"false\"\n                        {...register(\"smsReception\")}\n                      />\n                      <MypageRadioTitle htmlFor=\"SMSFalse\">\n                        수신 거부\n                      </MypageRadioTitle>\n                    </>\n                  )}\n                  {user?.smsReception === false && (\n                    <>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"SMSTrue\"\n                        value=\"true\"\n                        {...register(\"smsReception\")}\n                      />\n                      <MypageRadioTitle htmlFor=\"SMSTrue\">\n                        수신 허용\n                      </MypageRadioTitle>\n                      <MypageProfileRadio\n                        type=\"radio\"\n                        id=\"SMSFalse\"\n                        value=\"false\"\n                        {...register(\"smsReception\")}\n                        checked\n                      />\n                      <MypageRadioTitle htmlFor=\"SMSFalse\">\n                        수신 거부\n                      </MypageRadioTitle>\n                    </>\n                  )}\n                </MypageProfileChangeWrapper>\n                <MypageLine style={{ marginTop: \"41.5px\" }} />\n                <MyapgeBtnWrapper>\n                  <MypageBtnCancel\n                    onClick={() => {\n                      navigate(\"/mypage/main\");\n                    }}\n                  >\n                    취소\n                  </MypageBtnCancel>\n                  <MypageBtnNext type=\"submit\">다음</MypageBtnNext>\n                </MyapgeBtnWrapper>\n              </form>\n            </>\n          )}\n          {step === 0 && (\n            <MyapgeBtnWrapper>\n              <MypageBtnCancel\n                onClick={() => {\n                  navigate(\"/mypage/main\");\n                }}\n              >\n                취소\n              </MypageBtnCancel>\n              <MypageBtnNext onClick={handleLogin}>다음</MypageBtnNext>\n            </MyapgeBtnWrapper>\n          )}\n        </MypageProfileContentsWrapper>\n      </MypageBody>\n      {isModal && (\n        <MypageProfileModalContainer\n          setIsModal={setIsModal}\n          userRefetch={userRefetch}\n        />\n      )}\n    </MypageProfileWrapper>\n  );\n};\n\nexport default MypageProfilePresenter;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USER = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      id\n      created_at\n      username\n      email\n      name\n      phone\n      smsReception\n      emailReception\n    }\n  }\n`;\n\nexport const LOGIN = gql`\n  mutation Login($input: UsersPermissionsLoginInput!) {\n    login(input: $input) {\n      jwt\n      user {\n        id\n        email\n        confirmed\n        blocked\n        role {\n          id\n          name\n          description\n          type\n        }\n      }\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation updateUser($input: updateUserInput!) {\n    updateUser(input: $input) {\n      user {\n        id\n        phone\n        smsReception\n        emailReception\n      }\n    }\n  }\n`;\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport {\n  QueryUserArgs,\n  Query,\n  MutationLoginArgs,\n  Mutation,\n  MutationUpdateUserArgs,\n} from \"../../../commons/types/generated/types\";\nimport MypageProfilePresenter from \"./MypageProfile.presenter\";\nimport { GET_USER, LOGIN, UPDATE_USER } from \"./MypageProfile.query\";\nimport WithAuth from \"../../common/hocs/withAuth\";\nconst MypageProfileContainer = () => {\n  const navigate = useNavigate();\n\n  //* 다음 스탭\n  const [step, setStep] = useState(0);\n\n  //* 비밀번호 Input\n  const [input, setInput] = useState({\n    password: \"\",\n  });\n\n  //*모달 오픈\n  const [isModal, setIsModal] = useState(false);\n\n  //* 비밀번호 에러\n  const [pwError, setPwError] = useState(false);\n\n  //* 유저 정보 불러오기\n  const { data: userData, refetch: userRefetch } = useQuery<\n    Query,\n    QueryUserArgs\n  >(GET_USER, {\n    variables: {\n      id: String(sessionStorage.getItem(\"userId\")),\n    },\n  });\n\n  //* 로그인 뮤테이션\n  const [login] = useMutation<Mutation, MutationLoginArgs>(LOGIN);\n\n  //* 회원정보 변경 뮤테이션\n  const [updateUser] = useMutation<Mutation, MutationUpdateUserArgs>(\n    UPDATE_USER\n  );\n\n  //* 스탭 함수\n  // const handleStep = () => {\n  //   setStep(() => step + 1);\n  // };\n\n  //* 회원정보 변경을 위한 로그인\n  const handleLogin = async () => {\n    try {\n      await login({\n        variables: {\n          input: {\n            identifier: String(userData?.user?.username),\n            password: input.password,\n          },\n        },\n      });\n      setPwError(false);\n      setStep(() => step + 1);\n    } catch (error) {\n      alert(\"오류가 발생했습니다.\");\n      setPwError(true);\n    }\n  };\n\n  //*패스워드 입력\n  const handlePasswordInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //*회원정보 변경 함수\n  const handleUpdateUser = async (data: any) => {\n    try {\n      const emailReception = data.emailReception === \"true\" ? true : false;\n      const smsReception = data.smsReception === \"true\" ? true : false;\n      await updateUser({\n        variables: {\n          input: {\n            data: {\n              email: data.email,\n              password: data.password,\n              phone: data.phone,\n              smsReception,\n              emailReception,\n            },\n            where: {\n              id: String(userData?.user?.id),\n            },\n          },\n        },\n      });\n      alert(\"회원정보가 변경됐습니다.\");\n      navigate(\"/mypage/main\");\n    } catch (error) {\n      alert(\"오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <MypageProfilePresenter\n      userData={userData}\n      handleLogin={handleLogin}\n      handlePasswordInput={handlePasswordInput}\n      pwError={pwError}\n      step={step}\n      handleUpdateUser={handleUpdateUser}\n      isModal={isModal}\n      setIsModal={setIsModal}\n      userRefetch={userRefetch}\n    />\n  );\n};\n\nexport default WithAuth(MypageProfileContainer);\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation Login($input: UsersPermissionsLoginInput!) {\n    login(input: $input) {\n      jwt\n      user {\n        id\n        email\n        confirmed\n        blocked\n        role {\n          id\n          name\n          description\n          type\n        }\n      }\n    }\n  }\n`;\n\nexport const CREATE_TOKEN = gql`\n  mutation createToken($input: createTokenInput!) {\n    createToken(input: $input) {\n      token {\n        id\n      }\n    }\n  }\n`;\n\nexport const FETCH_TOKEN = gql`\n  mutation fetchToken($userId: String, $token: String) {\n    fetchToken(userId: $userId, token: $token) {\n      id\n      token\n      userId\n    }\n  }\n`;\n\nexport const UPDATE_TOKEN = gql`\n  mutation updateToken($input: updateTokenInput) {\n    updateToken(input: $input) {\n      token {\n        id\n      }\n    }\n  }\n`;\n\nexport const DELETE_TOKEN = gql`\n  mutation deleteToken($input: deleteTokenInput) {\n    deleteToken(input: $input) {\n      token {\n        id\n      }\n    }\n  }\n`;\n\nexport const FETCH_USER = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      isDeleted\n      username\n      email\n      name\n      phone\n      isSubscribe\n      expirationDate\n    }\n  }\n`;\n\nexport const UPDATE_IS_SUBSCRIPTION_USER = gql`\n  mutation updateUser($input: updateUserInput) {\n    updateUser(input: $input) {\n      user {\n        id\n      }\n    }\n  }\n`;\n","import { useMutation } from \"@apollo/client\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { FETCH_TOKEN } from \"../../login/Login.query\";\n\nexport default function WithAuth(Component: any) {\n  return function HandleCheckLogin(props: any) {\n    const [fetchToken] = useMutation(FETCH_TOKEN);\n    const navigate = useNavigate();\n    const userId = sessionStorage.getItem(\"userId\");\n    const token = sessionStorage.getItem(\"accessToken\");\n\n    //* 토큰 체크\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleTokenCheck = async () => {\n      try {\n        await fetchToken({\n          variables: {\n            userId,\n            token,\n          },\n        });\n      } catch {\n        alert(\"로그인이 필요합니다.\");\n        navigate(\"/login\");\n        return false;\n      }\n    };\n\n    useEffect(() => {\n      handleTokenCheck();\n      return;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return <Component {...props}></Component>;\n  };\n}\n","import styled from \"@emotion/styled\";\n\ninterface IMypageLayoutProps {\n  menu?: boolean;\n}\n\nexport const MypageMenuWrapper = styled.div`\n  width: 226px;\n  min-width: 226px;\n  height: 340px;\n  border: 2px solid #d7d7d7;\n`;\n\nexport const MypageTitle = styled.div`\n  width: 100%;\n  height: 71px;\n  background-color: #4033a2;\n  color: white;\n  font-family: SpoqaHanSansNeo-Bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid #d7d7d7;\n  cursor: pointer;\n`;\n\nexport const MypageBtn = styled.button`\n  outline: none;\n  background-color: white;\n  color: ${(props: IMypageLayoutProps) => (props.menu ? \"black\" : \"#999999\")};\n  font-size: 14px;\n  width: 100%;\n  height: 53px;\n  border: none;\n  border-bottom: 1px solid #d7d7d7;\n  cursor: pointer;\n  font-family: ${(props: IMypageLayoutProps) =>\n    props.menu ? \"SpoqaHanSansNeo-Bold\" : \"SpoqaHanSansNeo-Regular\"};\n`;\n\nexport const MypageContentsWrapper = styled.div`\n  width: 821px;\n`;\n","import { useNavigate } from \"react-router\";\nimport {\n  MypageMenuWrapper,\n  MypageTitle,\n  MypageBtn,\n} from \"./MypageLayout.style\";\n\ninterface IMypageLayoutProps {\n  menu: string;\n}\n\nconst MypageLayoutPresenter: React.FC<IMypageLayoutProps> = ({ menu }) => {\n  const navigate = useNavigate();\n\n  return (\n    <MypageMenuWrapper>\n      <MypageTitle\n        onClick={() => {\n          navigate(\"/mypage/main\");\n        }}\n      >\n        My Page\n      </MypageTitle>\n      <MypageBtn\n        menu={menu === \"payment\" ? true : false}\n        onClick={() => {\n          navigate(\"/mypage/payment\");\n        }}\n      >\n        결제내역\n      </MypageBtn>\n      <MypageBtn\n        menu={menu === \"download\" ? true : false}\n        onClick={() => {\n          navigate(\"/mypage/download\");\n        }}\n      >\n        다운로드 내역\n      </MypageBtn>\n      <MypageBtn\n        menu={menu === \"recent\" ? true : false}\n        onClick={() => {\n          navigate(\"/mypage/recent\");\n        }}\n      >\n        최근 본 데이터\n      </MypageBtn>\n      <MypageBtn\n        menu={menu === \"profile\" ? true : false}\n        onClick={() => {\n          navigate(\"/mypage/profile\");\n        }}\n      >\n        회원정보 변경\n      </MypageBtn>\n      <MypageBtn\n        menu={menu === \"withdraw\" ? true : false}\n        style={{ borderBottom: \"none\" }}\n        onClick={() => {\n          navigate(\"/mypage/withdraw\");\n        }}\n      >\n        회원탈퇴\n      </MypageBtn>\n    </MypageMenuWrapper>\n  );\n};\nexport default MypageLayoutPresenter;\n","import MypageLayoutPresenter from \"./MypageLayout.presenter\";\n\ninterface IMypageLayoutProps {\n  menu: string;\n}\n\nconst MypageLayoutContainer: React.FC<IMypageLayoutProps> = ({ menu }) => {\n  return <MypageLayoutPresenter menu={menu} />;\n};\nexport default MypageLayoutContainer;\n","export default __webpack_public_path__ + \"static/media/info.547ba76b.svg\";","export default __webpack_public_path__ + \"static/media/x.4bc627dc.svg\";"],"sourceRoot":""}